Useful Commands to do Stuff: (It's just a nice thing to have esp for newcomers)

(http://127.0.0.1:8000/docs)

##########################
APPLICATION COMMANDS
##########################

    Start the application:
uvicorn main:app --reload 

    Stop the application:
Control + C (simultaneously)



##########################
DATABASE/SQL COMMANDS
##########################

    Initialize the database:
python -m app.init_db

    Check database tables in SQLite: (to go into sqlite)
sqlite3 database.db

    List all tables in db:
.tables

    View stuff in users table:
SELECT * FROM users;

    View stuff in scans table:
SELECT * FROM scans;

    Escape from SQLite prison: (exit SQL)
.exit



##########################
Quick Terminal Tests
##########################

    //////////////////////////
    THESE ARE FOR USER TESTING:
    //////////////////////////
    
    Get all Users:
curl http://127.0.0.1:8000/users

    -> go to sql then do the following followed by curl http://127.0.0.1:8000/users (output should be jane doe)
INSERT INTO users (name, email, phone, badge_code, updated_at) 
VALUES ('Jane Doe', 'jane@example.com', '+1 (555) 987-6543', 'give-seven-food-trade', datetime('now'));
.exit

    -> will fetch Jane Doe's info (get doxxed)
curl http://127.0.0.1:8000/users/give-seven-food-trade

    Updating a user's information:
curl -X PUT "http://127.0.0.1:8000/users/give-seven-food-trade" \
     -H "Content-Type: application/json" \
     -d '{"name": "Jane Smith", "phone": "+1 (555) 333-2222"}'

    -> will fetch Jane Doe's info (get doxxed)
curl http://127.0.0.1:8000/users/give-seven-food-trade

    //////////////////////////
    THESE ARE FOR SCAN TESTING
    //////////////////////////


    -> get all scans:
curl http://127.0.0.1:8000/scans

    -> add a scan
curl -X POST "http://127.0.0.1:8000/scan/give-seven-food-trade" \
     -H "Content-Type: application/json" \
     -d '{"activity_name": "ML Workshop", "activity_category": "workshop"}'

    -> check afterwards again:
curl http://127.0.0.1:8000/scans/activity

    -> the bonus feature - # of people at activity
curl "http://127.0.0.1:8000/activity-scans?activity_name=Dinner"




##########################
Delete Table Information
##########################

    Delete the info:
sqlite3 database.db
DELETE FROM users;
DELETE FROM scans;

    Check to see if it worked:
SELECT * FROM users;
SELECT * FROM scans;

    if so:
.exit

    (THIS ONE DOES NOT REQUIRE python -m app.init_db)
    HOWEVER IF YOU INSTEAD USED (DROP TABLE users;) then you must 
    OR IF YOU (rm database.db) <- remove the database then you must
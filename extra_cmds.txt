Useful Commands to do Stuff:
  Production Documentation: http://34.170.197.1/docs

##########################
APPLICATION COMMANDS
##########################

    Start the application:
        uvicorn main:app --reload

    Stop the application:
        Press Control + C (or Command + C on macOS) in the terminal



##########################
DATABASE/SQL COMMANDS
##########################

    Initialize the database:
        python -m app.init_db

    Check database tables in SQLite:
        sqlite3 database.db

    List all tables in the database:
        .tables

    View data in the "users" table:
        SELECT * FROM users;

    View data in the "scans" table:
        SELECT * FROM scans;

    Exit SQLite shell:
        .exit



##########################
QUICK TERMINAL TESTS
##########################

    //////////////////////////
    THESE ARE FOR USER TESTING:
    //////////////////////////

    Get all users:
        curl http://127.0.0.1:8000/users

    To insert a test user manually via SQLite (useful for verifying later):
        Open the SQLite shell:
            sqlite3 database.db
        Then run:
            INSERT INTO users (name, email, phone, badge_code, updated_at) 
            VALUES ('Jane Doe', 'jane@example.com', '+1 (555) 987-6543', 'give-seven-food-trade', datetime('now'));
        And exit:
            .exit

    Fetch Jane Doe's info:
        curl http://127.0.0.1:8000/users/give-seven-food-trade

    Update a user's information:
        curl -X PUT "http://127.0.0.1:8000/users/give-seven-food-trade" \
             -H "Content-Type: application/json" \
             -d '{"name": "Jane Smith", "phone": "+1 (555) 333-2222"}'

    Verify the update by fetching the user again:
        curl http://127.0.0.1:8000/users/give-seven-food-trade


    //////////////////////////
    THESE ARE FOR SCAN TESTING:
    //////////////////////////

    Get all scans:
        curl http://127.0.0.1:8000/scans

    Add a scan for a user:
        curl -X POST "http://127.0.0.1:8000/scan/give-seven-food-trade" \
             -H "Content-Type: application/json" \
             -d '{"activity_name": "ML Workshop", "activity_category": "workshop"}'

    Check scans again:
        curl http://127.0.0.1:8000/scans

    Bonus Feature - Activity Scan Summary:
        Get the number of scans for an activity (e.g., Dinner):
            curl "http://127.0.0.1:8000/activity-scans?activity_name=Dinner"



##########################
DELETE TABLE INFORMATION
##########################

    To delete all records from the tables (use with caution):

    Open the SQLite shell:
        sqlite3 database.db

    Delete records from the "users" table:
        DELETE FROM users;

    Delete records from the "scans" table:
        DELETE FROM scans;

    Verify that the tables are empty:
        SELECT * FROM users;
        SELECT * FROM scans;

    Exit the SQLite shell:
        .exit

    Note:
        If you drop the tables (e.g., with DROP TABLE users;) or remove the database file (rm database.db),
        you must reinitialize the database with:
            python -m app.init_db
